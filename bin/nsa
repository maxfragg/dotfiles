#!/usr/bin/env python

from gi.repository import Gtk, Gdk, GObject
import random
import fnmatch
from os.path import dirname, join, realpath
from os import listdir

class ProgressBarWindow(Gtk.Window):

    def __init__(self):
        Gtk.Window.__init__(self, title="NSA Data Collector")
        self.set_border_width(10)
        self.set_type_hint(Gdk.WindowTypeHint.SPLASHSCREEN)

        vbox = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=6)
        self.add(vbox)

        # randomize logo
        logos = listdir(dirname(realpath(__file__))+ '/nsa_img')
        while True:
            logo = random.choice(logos)
            if fnmatch.fnmatch(logo, "*.png"):
                self.logo = Gtk.Image.new_from_file(dirname(realpath(__file__))+'/nsa_img/'+logo)
                break

        
        vbox.pack_start(self.logo, True, True, 0)

        self.progressbar = Gtk.ProgressBar()
        self.progressbar.set_text("initializing ...")
        self.progressbar.set_show_text(True)
        vbox.pack_start(self.progressbar, True, True, 0)

        self.timeout_id = GObject.timeout_add(20, self.on_timeout, None)
        self.activity_mode = False

    def on_timeout(self, user_data):
        x = max(0.0, random.gauss(0.0, 0.02))
        new_value = self.progressbar.get_fraction() + x
        if new_value > 1:
            Gtk.main_quit()
        self.progressbar.set_fraction(new_value)
        return True

win = ProgressBarWindow()
win.connect("delete-event", Gtk.main_quit)
win.show_all()
Gtk.main()
