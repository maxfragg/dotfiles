#!/bin/bash


##################################################
##	added scripts and comfort-functions          #
##################################################

lt(){
    ~/bin/LightTable/LightTable "$@"
}

calc(){ echo "scale=2; $@" | bc -l ;}

a(){
	if [[ `id -u` != "0" ]]; then
		SU="sudo"
	else
		SU=""
	fi

	if [[ "$1" == "au" ]]; then
		$SU aura -Ayu
	elif [[ "$1" == "ru" ]]; then
		$SU aura -Syu
	elif [[ "$1" == "ri" ]]; then
		$SU aura -S "$2"
	elif [[ "$1" == "ai" ]]; then
		$SU aura -A "$2"
	elif [[ "$1" == "h" ]]; then
		echo -e "my aura wrapper\n"
		if [[ "$SU" == "sudo" ]]; then
			echo -e "commands will be prefixed with sudo, since you are not root!\n"
		fi
		echo "au: aur update"
		echo "ru: repo update"
		echo "ai: aur install"
		echo "ri: repo install"
	else
		$SU aura "$@"
	fi

}

bat(){

	full=`cat /sys/class/power_supply/BAT0/energy_full`
	now=`cat /sys/class/power_supply/BAT0/energy_now` 
	echo -n "Battery 0: " 
	echo "scale=2; $now / $full" | bc -l | sed 's/^\./0./'

	full=`cat /sys/class/power_supply/BAT1/energy_full`
	now=`cat /sys/class/power_supply/BAT1/energy_now` 
	echo -n "Battery 1: " 
	echo "scale=2; $now / $full" | bc -l | sed 's/^\./0./'
}

man() {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_so=$'\E[38;5;246m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
}

objdmp(){
	objdump -d --disassembler-options=intel $@
}

md2pdf(){
	pandoc --latex-engine=lualatex -f markdown+grid_tables+tex_math_dollars -s --highlight-style pygments "$@" -o "$@".pdf
}

xor(){
      local res=(`echo "$1" | sed "s/../0x& /g"`)
      shift 1
      while [[ "$1" ]]; do
            local one=(`echo "$1" | sed "s/../0x& /g"`)
            local count1=${#res[@]}
            if [ $count1 -lt ${#one[@]} ]
            then
                  count1=${#one[@]}
            fi
            for (( i = 0; i < $count1; i++ ))
            do
                  res[$i]=$((${one[$i]:-0} ^ ${res[$i]:-0}))
            done
            shift 1
      done
      printf "%02x" "${res[@]}"
}

alias thalia='ssh -D 8080 -f -C -N uni ;curlftpfs -o proxy=127.0.0.1:8080,socks5  ftp://thalia.hofmann.stw.uni-erlangen.de/ ~/tmp/'

alias squarez='sshfs -o reconnect squarez_git:/home/git-annex ~/squarez/'

heute.txt(){
	local t1=`date +%Y-%m-%d`
	local t2=$@
	if [ -f $t1* ]; then
		herbstclient spawn $EDITOR2 $t1*
	else
		if [[ $@ == "" ]]; then
			echo "Enter title: "
			read t2
		fi
		local title=$t1-$t2.txt
		touch $title
		git add $title
		date +%Y-%m-%d>>$title
		echo $t2>>$title
		$config_gui_editor $title 2>/dev/null &
	fi
} 

x_cfg_reload(){
	source ~/.bash_config
	xrdb -merge -I"$HOME" -D"$config_x_transparency" -D"$config_x_colortheme" -D"$config_x_dpi" .Xdefaults
}

echoerr() { /usr/bin/echo "$@" >&2; }

finger_uni(){ ssh uni finger $@;}

#mancell(){ man -M ~/.man $@;}

kueche(){ ssh squarez mpc $@;}

rsyncpra(){ rsync --progress --recursive --append $@;}

countdown(){ for j in `seq $1` ;do sleep 1$2; echo $j ; done; bell;}

allpdf(){ for i in "$@"*.pdf ; do echo $i ; katarakt "$i" 2>/dev/null ; done }

allxournal(){ for i in "$@"*/*.pdf ; do echo $i ; xournal $i ; done }

pdf(){ ~/bin/katarakt "$@" 2>/dev/null & }

anycat(){ if( file "$1" | grep "image data" >/dev/null ) then icat $1 ; else cat $@; fi }

imgur(){
for i in "$@";do
curl -# -F "image"=@"$i" -F "key"="4907fcd89e761c6b07eeb8292d5a9b2a" http://imgur.com/api/upload.xml|\
grep -Eo '<[a-z_]+>http[^<]+'|sed 's/^<.\|_./\U&/g;s/_/ /;s/<\(.*\)>/\x1B[0;34m\1:\x1B[0m /'
done
}

#renames files and folders to not contain any spaces, use with care!
stu(){
	find -name "* *" -type d | rename 's/ /_/g'    # do the directories first
	find -name "* *" -type f | rename 's/ /_/g'
}

wallpaper(){
	if [[ $1 == "-info" ]]; then
		echo "current wallset is: "$WALLSET
		echo "available sets are:"
		echo `ls ~/git/wallpaper/`
		return
	fi
	if [[ $1 != "" ]]; then
		export WALLSET=$1
	else
		if [[ $WALLSET == "" ]]; then
			WALLSET=misc
		fi
		
	fi
	local files=(~/git/wallpaper/$WALLSET/*)
	#printf "%s\n" "${files[RANDOM % ${#files[@]}]}"

	feh --bg-fill `printf "%s\n" "${files[RANDOM % ${#files[@]}]}"`
		
}

tagtomon(){
	TAG_NAMES=(irc term web ed im video pdf fm music mail )
	MON=`herbstclient stack | grep ${TAG_NAMES[$@]} |cut -d' ' -f5`
	[[ $MON  ]] && echo $MON && return
	echo 0
}

commitmsg(){
wget http://whatthecommit.com/ -O - 2>/dev/null | grep -o '<p>.*$' | sed 's/<[^>]*>//g';}

alias mymutt='mutt; sleep 10; rm -f ~/.sec/goobookrc'

alarm(){ sleep "$@" ; mplayer ~/Musik/bcc-break/machine_lullaby_1.ogg >/dev/null ;}

ipof(){ grep "$@" ~/.ip | cut -d" " -f2 ;}

ipadd(){ host2ip "$@" >> ~/.ip ;}

host2ip(){ echo -n "$@ "; nslookup "$@" | grep Add | grep -v '#' | cut -f 2 -d ' ' | head -1 ; }

bluetooth(){
	case $@ in
		1)
		sudo rfkill unblock bluetooth
		;;
		on)
		sudo rfkill unblock bluetooth
		;;
		0)
		sudo rfkill block bluetooth
		;;
		off)
		sudo rfkill block bluetooth
		;;
		*)
		echo "option musst be on/1 or off/0"
	esac
}

##################################################
############# Fun stuff        ###################
##################################################

alias matrix='echo -e "\e[32m"; while :; do for i in {1..16}; do r="$(($RANDOM % 2))"; if [[ $(($RANDOM % 5)) == 1 ]]; then if [[ $(($RANDOM % 4)) == 1 ]]; then v+="\e[1m $r   "; else v+="\e[2m $r   "; fi; else v+="     "; fi; done; echo -e "$v"; v=""; done'
alias matrix2='echo -e "\e[31m"; while $t; do for i in `seq 1 30`;do r="$[($RANDOM % 2)]";h="$[($RANDOM % 4)]";if [ $h -eq 1 ]; then v="\e[1m $r";else v="\e[2m $r";fi;v2="$v2 $v";done;echo -e $v2;v2="";done;'
alias matrix3='COL=$(( $(tput cols) / 2 )); clear; tput setaf 2; while :; do tput cup $((RANDOM%COL)) $((RANDOM%COL)); printf "%$((RANDOM%COL))s" $((RANDOM%2)); done'
alias matrix4='echo -ne "\e[32m" ; while true ; do echo -ne "\e[$(($RANDOM % 2 + 1))m" ; tr -c "[:print:]" " " < /dev/urandom | dd count=1 bs=50 2> /dev/null ; done'
alias matrix5='tr -c "[:digit:]" " " < /dev/urandom | dd cbs=$COLUMNS conv=lcase,unblock | GREP_COLOR="1;32" grep --color "[^ ]"'
alias roulette='[ $[ $RANDOM % 6 ] == 0 ] && echo Die || echo Live'				# command line Russian roulette
alias starwars='telnet towel.blinkenlights.nl'							# the famous starwars ASCII version from telnet

alias futurama='curl -Is slashdot.org | sed -n '5p' | sed 's/^X-//''				# get Futurama quotations from slashdot.org servers

##################################################
# Swap 2 filenames around			 #
##################################################

###### from Uzi's bashrc
function swap()
{
    local TMPFILE=tmp.$$
    [ $# -ne 2 ] && echo "swap: 2 arguments needed" && return 1
    [ ! -e $1 ] && echo "swap: $1 does not exist" && return 1
    [ ! -e $2 ] && echo "swap: $2 does not exist" && return 1
    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
}



##################################################
# Network/Internet -oriented stuff		 #
##################################################

alias appson="netstat -lantp | grep -i stab | awk -F/ '{print $2}' | sort | uniq"	# view only the process name using an internet connection
alias bandwidth='dd if=/dev/zero of=/dev/null bs=1M count=32768'			# processor / memory bandwidthd? in GB/s
alias browse_bonjour='dns-sd -B'							# browse services advertised via Bonjour
alias hdinfo='hdparm -i[I] /dev/sda'							# hard disk information - model/serial no.
#alias hostip='wget http://checkip.dyndns.org/ -O - -o /dev/null | cut -d: -f 2 | cut -d\< -f 1'
#alias hostname_lookup='lookupd -d'							# interactive debugging mode for lookupd (use tab-completion)
alias http_trace='pkt_trace port 80'							# to show all HTTP packets
alias iftop='sudo iftop -i eth0' 							# start "iftop" program (sudo apt-get install iftop)
alias ip4grep="grep -E '([0-9]{1,3}\.){3}[0-9]{1,3}'"					# look for IPv4 address in files
#alias ip='curl www.whatismyip.org'
alias ip_info='ipconfig getpacket en1'							# info on DHCP server, router, DNS server, etc (for en0 or en1)
alias ipt80='sudo iptstate -D 80'							# check out only iptables state of http port 80 (requires iptstate)
alias ip_trace='pkt_trace ip'								# to show all IP packets
alias ipttrans='sudo iptstate -D 51413'							# iptables state of Transmission-Daemon port (requires iptstate)
alias listen='sudo netstat -pnutl' 							# lists all listening ports together with PID of associated process
alias lsock='sudo /usr/sbin/lsof -i -P'							# to display open sockets ( -P option to lsof disables port names)
alias netapps="lsof -P -i -n | cut -f 1 -d ' '| uniq | tail -n +2"
alias nethogs='sudo nethogs eth0' 							# start "nethogs" program (sudo apt-get install nethogs)
alias netl='sudo nmap -sT -O localhost'
alias netscan='sudo iwlist wlan0 scan'							# to scan your environment for available networks, do the following
alias netstats='sudo iwspy wlan0'							# if card supports it, you can collect wireless statistics by using
alias network='sudo lshw -C network' 							# view network device info
alias networkdump='sudo tcpdump not port 22' 						# dump all the network activity except ssh stuff
alias nsl='netstat -f inet | grep -v CLOSE_WAIT | cut -c-6,21-94 | tail +2'		# show all programs connected or listening on a network port
alias ns='netstat -alnp --protocol=inet | grep -v CLOSE_WAIT | cut -c-6,21-94 | tail +2'
alias openports='sudo netstat -nape --inet' 						# view open ports
alias pkt_trace='sudo tcpflow -i `active_net_iface` -c'
alias ports='lsof -i -n -P' 								# view programs using an internet connection
alias portstats='sudo netstat -s' 							# show statistics for all ports
alias ramvalue='sudo dd if=/dev/mem | cat | strings'					# will show you all the string (plain text) values in ram
alias randommac='python -c "from itertools import imap; from random import randint; print ':'.join(['%02x'%x for x in imap(lambda x:randint(0,255), range(6))])"'										# generate random valid mac addresses
alias remote='ssh -p 1234 12.34.56.78'							# access some remote host
alias restartnet='sudo /etc/rc.d/network restart;sudo /etc/rc.d/wicd restart'
alias rssup='php /srv/http/rssupdate.php'
alias setessid='sudo iwconfig wlan0 essid network-essid'				# set the essid, which identifies the network access point you want
alias smtp_trace='pkt_trace port smtp'							# to show all SMTP packets
alias tcpstats='sudo netstat -st' 							# show statistics for tcp ports
alias tcp_='sudo netstat -atp' 								# list all TCP ports
alias tcp_trace='pkt_trace tcp'								# to show all TCP packets
alias topsites='curl -s -O http://s3.amazonaws.com/alexa-static/top-1m.csv.zip ; unzip -q -o top-1m.csv.zip top-1m.csv ; head -1000 top-1m.csv | cut -d, -f2 | cut -d/ -f1 > topsites.txt'							# get a list of top 1000 sites from alexa
alias tproxy='ssh -ND 8118 user@server&; export LD_PRELOAD="/usr/lib/libtsocks.so"'	# creates a proxy based on tsocks
alias udpstats='sudo netstat -su' 							# show statistics for udp ports
alias udp='sudo netstat -aup' 								# list all UDP ports
alias udp_trace='pkt_trace udp'								# to show all UDP packets
alias website_dl='wget --random-wait -r -p -e robots=off -U mozilla "$1"'		# download an entire website
alias website_images='wget -r -l1 --no-parent -nH -nd -P/tmp -A".gif,.jpg" "$1"'	# download all images from a site
alias whois='whois -H'
