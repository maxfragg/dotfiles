#!/bin/bash
# herbstlayout - loads layouts for herbstluftwm with dmenu
#
# Requires a folder ($LAYOUTS_PATH) which contains one file for each layout.
# Each of these are bash-syntax files with 3 variables:
#	- $LAYOUT, the layout in "herbstclient dump"-format.
#	- $RULES (optional) , an array of the rules applied to this layout.
#	- $AUTOSTARTS (optional) , an array of applications executed on
#	  (re-)loading this layout.
# 
# General syntax is "<COMMAND> <LAYOUTFILE>".
# Available commands:
#	- load: apply $LAYOUT to the current tag, sets $RULES and executes 
#	        $AUTOSTARTS
#	- reload: same as load, but uses the tag named LAYOUTFILE
# 	- add: creates a tag named LAYOUTFILE, binds it to $MOD-(Shift-)N
#	       (where N is the greatest digit available), an loads it.

# customize these variables
#$LAYOUTS_PATH=${LAYOUTS_PATH:-$XDG_CONFIG_HOME/herbstluftwm/layouts}
LAYOUTS_PATH=/home/maxfragg/.config/herbstluftwm/layouts
MOD=Mod4
dmenu_cmd=${dmenu_cmd:-dmenu $@ }

source ~/.config/herbstluftwm/colors.sh

# do the actual loading (source the file and apply layout, rules and autostart)
function load() {
	source "$LAYOUTS_PATH/$1"
	if ! herbstclient load "$2" "$LAYOUT" ; then
		echo "$0: applying layout $1 failed!" >&2
		exit 1
	fi
	for I in "${RULES[@]}" ; do
		if ! herbstclient rule $I ; then
			echo "$0: applying rules for layout $1 failed!" >&2
		fi
	done
	for I in "${AUTOSTARTS[@]}" ; do
		eval $I
	done
}

# handle the action reported by dmenu ($1 -> action, $2 -> tag)
function action() {
	case $1 in
		# add tag with keybinding and load layout there
		add)
			if [[ ! -r $LAYOUTS_PATH/$2 ]] ; then
				echo "$0: could not find layout \"$2\"\!" >&2
				exit 1
			fi
			if herbstclient tag_status | grep "$2" >/dev/null ; then
				echo "$0: tag $2 already exists, use \"reload\" or \"load\"\!" >&2
				exit 1
			fi
			herbstclient add "$2"
			TAGS=$(herbstclient tag_status | wc -w)
			if [[ $TAGS -gt 9 ]] ; then
				echo "$0: too many tags; will not get a keybinding" >&2
			else 
				herbstclient keybind "$MOD-$(( TAGS ))" use "$2"
				herbstclient keybind "$MOD-Shift-$(( TAGS ))" move "$2"
			fi
			load $2 $2
			;;
		# get current tag and load layout there
		load)
			TAG=$(herbstclient tag_status | grep -oE '#[[:graph:]]*')
			load $2 ${TAG:1}
			;;
		# load layout on the tag with the layout's name
		reload)
			if herbstclient tag_status | grep "$2" >/dev/null ; then
				load $2 $2
			fi	
			;;
		remove)
			herbstclient merge_tag $2
			;;
		# save the current layout
		save-layout)
			if [[ -e $LAYOUTS_PATH/$2 ]] ; then
				while true ; do
					REPLY=$(echo -e "yes\nno" | $dmenu_cmd -nf $COLOR_P_FG1 -sb $COLOR_P_HI -nb $COLOR_P_BG -p "$2 already exists. Overwrite?")
					case $REPLY in
						yes|Yes|y|Y)
							break
							;;
						no|No|n|N)
							return;
							;;
						*)
							:
							;;
					esac
				done
			fi
			# strip WINIDs from the dump
			LAYOUT=$(herbstclient dump | sed 's/ 0x[[:digit:]]*//g')
			cat > "$LAYOUTS_PATH/$2" << EOT
#!/bin/bash
# $LAYOUTS_PATH/$2
# generated by herbstlayout
LAYOUT='$LAYOUT'
EOT
			;;
		# planned:
		#save-rules)
		#save-autostarts)
		#save-all)
		*)
			echo "$0: unkown command!" >&2
			exit 1
			;;
	esac
}

# dmenu stuff
LAYOUTS=$(ls --format=single-column $LAYOUTS_PATH)
ACTIONS=$(cat << EOT
add
load
reload
remove
save-layout
EOT
)
ACTION=$($dmenu_cmd -nf $COLOR_P_FG1 -sb $COLOR_P_HI -nb $COLOR_P_BG -p "herbstlayout " <<< "$ACTIONS")
(( $? != 0 )) && exit 125
LAYOUT=$($dmenu_cmd -nf $COLOR_P_FG1 -sb $COLOR_P_HI -nb $COLOR_P_BG -p "herbstlayout $ACTION" <<< "$LAYOUTS")
(( $? != 0 )) && exit 125
action $ACTION $LAYOUT

exit 0
